os:
  - linux

language: go
go:
  - "1.13.x"

services:
  - docker

# need to onboard in sonarcloud later
addons:
  sonarcloud:
    organization: "open-cluster-management"
    token:
      secure: ”HfA7DCfNXnRbQ2J7U1XyxKrsuij3eDQM5aFvyugYN/cpa0nGnJKn3ncKg475D4U8Y5fMdbLw2XOOQpOnLVZUfvpNSTw35P+ziIOrMSX9JQoITG9L1l8XkpIkW8Xi30jhnuLs3QUwnNGLm5evTRWnp3EgNOoMh/5N7GHn9BDJOcponTEZLYDGIVn+ob5Sypua4/PfGSfuFNyVIMaOsNGUnHNwTsKQkOtVgwy+essvNZVfCGmSM1dpM8vFptyhAZrf6yRqAuHHfzlKQcPEk1hc0h+e22AeokgTCnAYn6hxFJ2//BIzhYT7X6ooRZua/pJQhvNHhLgJ/eQ0f1cEqWEJuROHJZGCWsZQP+++LkPpNc121QxhPNqX2y1DBiqvD8411nVI6Ojg+uR7ri36cZ4dUDaB+zAMwzHehmk83a/KT9Gvk0fX080vuZ1rVy1hg6HOAKwkRBOUVKpMKImy9DHZhL51ggCwiJH0lKGZVT+LhUxjGKcS+Mf+KcbCr+I+oZhFpfWJtPp7fFbqJ63ozmdFix6q2mLbpJtAZzrEjyWs1/cgGtW9+CKsZn6FrYWD5tt37O1lr+XEp3JiOOELJuixoy31ku/Zwu2Y4dOlJCqoS56OqHkUqk8g1iOW7gc8U66wRgTbEv8ggI54a4b0ccv4lG5TNVD6putafF1BxiTXbV4=“

#branches:
#  only:
#    - master
#    - /^release-[0-9]+\..*$/

env:
  global:
    # Required
    - OS=linux
    - COMPONENT_TAG_EXTENSION="-${TRAVIS_COMMIT}"

    # Component Specific
    - COMPONENT_INIT_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/install-dependencies.sh
    - COMPONENT_BUILD_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/build.sh
    - COMPONENT_UNIT_TEST_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/run-unit-tests.sh
    - COMPONENT_DEPLOY_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/deploy-to-cluster.sh
    - COMPONENT_E2E_TEST_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/run-e2e-tests.sh

stages:
  - build
  - unit-test
  - test-e2e
  - release-ff
  - publish

before_script:
  - make init
  - echo "https://${GITHUB_TOKEN}:x-oauth-basic@github.com" >> ~/.git-credentials
  - export GOPRIVATE=github.com/stolostron
  - git config --global url."https://$GITHUB_TOKEN@github.com/stolostron".insteadOf "https://github.com/stolostron"

jobs:
  include:
    - stage: build
      name: "Build the test image and push it"
      script:
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - |
          make && make update-csv && make component/build && make component/push && make imagescan/status && make security/scans
    - stage: unit-test
      name: "Run unit tests"
      script:
        # Set the image tag differently for PRs
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        # Bootstrap the build harness, pull test image, and run unit tests.
        - |
          make && make component/test/unit && make sonar/go && make copyright-check TRAVIS_BRANCH=${TRAVIS_BRANCH}
    - stage: test-e2e
      name: "Deploy the image to a cluster and run e2e tests"
      script:
        #Check out a clusterpool, set up oc, deploy, run e2e tests, and return clusterpool cluster
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - |
          make
          make component/pull
          make component/test/e2e
    - stage: release-ff
      name: "Push commits to current release branch"
      if: type = push AND branch =~ /^master$/
      script:
        - make
        - make release-ff
    - stage: publish
      name: "Publish the image to quay with an official version/sha tag and publish entry to integration pipeline stage"
      if: type = push AND branch =~ /^release-[0-9]+\..*$/
      script:
        - |
          make
          make pipeline-manifest/update PIPELINE_MANIFEST_COMPONENT_SHA256=${TRAVIS_COMMIT} PIPELINE_MANIFEST_COMPONENT_REPO=${TRAVIS_REPO_SLUG} PIPELINE_MANIFEST_BRANCH=${TRAVIS_BRANCH}
