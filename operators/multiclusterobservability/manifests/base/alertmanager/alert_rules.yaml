kind: ConfigMap
apiVersion: v1
metadata:
  name: thanos-ruler-default-rules
data:
  default_rules.yaml: |
    groups:
      - name: kubernetes-storage
        rules:
        - alert: KubePersistentVolumeFillingUp
          annotations:
            summary: PersistentVolume is filling up.
            description: "The PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} is only {{ $value | humanizePercentage }} free."
          expr: kubelet_volume_stats_available_bytes{namespace="open-cluster-management-observability"}/kubelet_volume_stats_capacity_bytes{namespace="open-cluster-management-observability"} < 0.03
          for: 1m
          labels:
            instance: "{{ $labels.instance }}"
            cluster: "{{ $labels.cluster }}"
            clusterID: "{{ $labels.clusterID }}"
            PersistentVolumeClaim: "{{ $labels.persistentvolumeclaim }}"
            severity: critical
        - alert: KubePersistentVolumeFillingUp
          annotations:
            summary: PersistentVolume is filling up and is predicted to run out of space in 6h.
            description: "The PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} is only {{ $value | humanizePercentage }} free."
          expr: (kubelet_volume_stats_available_bytes{namespace="open-cluster-management-observability"}/kubelet_volume_stats_capacity_bytes{namespace="open-cluster-management-observability"}) < 0.15 and (predict_linear(kubelet_volume_stats_available_bytes{namespace="open-cluster-management-observability"}[6h], 4 * 24 * 3600)) <0
          for: 1h
          labels:
            instance: "{{ $labels.instance }}"
            cluster: "{{ $labels.cluster }}"
            clusterID: "{{ $labels.clusterID }}"
            PersistentVolumeClaim: "{{ $labels.persistentvolumeclaim }}"
            severity: warning
      - name: policy-reports
        rules:
        - alert: CriticalPolicyReport
          annotations:
            summary: There is a policy report with severity of critical.
            description: "The policy: {{ $labels.policy }} has a severity of critical on cluster: {{ $labels.cluster }}"
          expr: sum(policyreport_info{severity="critical"}) by (managed_cluster_id, category, clusterID, policy, severity) > 0
          for: 1m
          labels:
            severity: critical
      - name: slo-sli-trends
        rules:
        - expr: sli:apiserver_request_duration_seconds:trend:1m >= bool 0.9900
          record: sli:apiserver_request_duration_seconds:bin:trend:1m
          labels:
            target: 0.9900
      - name: grafana-dashboard
        rules:
        - expr: sum(cluster:kube_pod_container_resource_requests:cpu:sum) by (cluster) / sum(kube_node_status_allocatable{resource="cpu"}) by (cluster)
          record: cluster:cpu_requested:ratio
          labels:
            usage: grafana-dashboard
        - expr: sum(cluster:kube_pod_container_resource_requests:memory:sum) by (cluster) / sum(kube_node_status_allocatable{resource="memory"}) by (cluster)
          record: cluster:memory_requested:ratio
          labels:
            usage: grafana-dashboard
        - expr: 1 - sum(:node_memory_MemAvailable_bytes:sum) by (cluster) / sum(kube_node_status_allocatable{resource="memory"}) by (cluster)
          record: cluster:memory_utilized:ratio
          labels:
            usage: grafana-dashboard
        - expr: sum(machine_cpu_cores) by (cluster)
          record: cluster:cpu_cores:sum
          labels:
            usage: grafana-dashboard
        - expr: sum(kube_node_status_allocatable{resource="cpu"}) by (cluster)
          record: cluster:cpu_allocatable:sum
          labels:
            usage: grafana-dashboard
        - expr: sum(machine_memory_bytes) by (cluster)
          record: cluster:machine_memory:sum
          labels:
            usage: grafana-dashboard
